- name: Provision a new vm from scratch
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    datacenter: "{{ vcenter_datacenter }}"
    folder: "{{ vm_folder }}"
    name: "{{ fresh_prov }}"
    state: poweredon
    guest_id: "{{ fresh_os }}"
    #esxi_hostname: #Set either esxi or cluster
    cluster: "{{ cluster_name }}"
    disk:
    - size_gb: 2
      type: thin
      autoselect_datastore: true # To select the data store that is the least utilized
      # datastore: # To manually select datastore available (written in the vars of this role)
    hardware:
      memory_mb: 4096
      num_cpus: 4
      scsi: paravirtual
    cdrom:
      - controller_number: 0
        unit_number: 0
        state: present
    networks:
    - name: "{{ network_vars['name'] }}" #Name of the portgroup or distributed virtual portgroup for this interface.
      mac: "{{ network_vars['mac']}}"
      #ip:  #Used to set static IP
      #netmask: #Used to set static netmask required for ip
      device_type: vmxnet3 #vmxnet3 by default
    #wait_for_ip_address: true  #Wait until vCenter detects an IP address for the virtual machine. (vmware-tools needs to be installed)
    #wait_for_ip_address_timeout: 600  #Define a timeout (in seconds) for the wait_for_ip_address parameter.
  register: deploy_vm

# - name: install vmware tools via Chocolatey
#   win_chocolatey: 
#     name: vmware-tools 
#     state: latest
#   when: ansible_os_family == "Windows"

# - name: install vmware tools via dnf
#   ansible.builtin.dnf:
#     name: vmware-tools
#     state: latest
#   when: ansible_os_family == "RedHat"

- name: Change virtual machine's boot order and related parameters
  community.vmware.vmware_guest_boot_manager:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    name: "{{ fresh_prov }}"
    boot_delay: 2000
    enter_bios_setup: true
    boot_retry_enabled: true
    boot_retry_delay: 22300
    boot_firmware: bios
    secure_boot_enabled: false
    boot_order:
      - floppy
      - cdrom
      - ethernet
      - disk
  delegate_to: localhost
  register: vm_boot_order

# - name: Run command inside a virtual machine
#   community.vmware.vmware_vm_shell:
#     hostname: "{{ vcenter_hostname }}"
#     datacenter: "{{ vcenter_datacenter }}"
#     folder: "{{ vm_folder }}"
#     vm_id: "{{ fresh_prov }}"




- name: Print the VM info deployed from scratch
  ansible.builtin.debug:
    var: deploy_vm