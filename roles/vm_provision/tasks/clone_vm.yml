- name: Instant Clone a VM
  community.vmware.vmware_guest_instant_clone:
    hostname: "{{ vcenter_hostname }}"
    datacenter: "{{ vcenter_datacenter }}"
    validate_certs: false
    folder: "{{ vm_folder }}"
    name: "{{ clone_name }}"
    parent_vm: "{{ clone_parent }}"
    datastore: "{{ datastore3 }}"
    host: "{{ esxi_host2 }}"
  register: vm_clone
  delegate_to: localhost

- name: set state to poweroff the Cloned VM
  community.vmware.vmware_guest_powerstate:
    validate_certs: false
    hostname: "{{ vcenter_hostname }}"
    name: "{{ clone_name }}"
    folder: "{{ vm_folder }}"
    state: powered-off
  delegate_to: localhost

- name: Print the VM info from cloned VM
  ansible.builtin.debug:
    var: vm_clone

- name: Convert cloned VM to a template (unable to re-config)
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    datacenter: "{{ vcenter_datacenter }}"
    name: "{{ clone_name }}"
    folder: "{{ vm_folder }}"
    cluster: "{{ cluster_name }}"
    is_template: true
  register: vm_clone_template

- name: Convert cloned VM to template
  ansible.builtin.debug:
    var: vm_clone_template